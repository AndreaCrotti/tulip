#!/usr/bin/env lua

local Stubs = require 'lua/stubs'
local Lexer = require 'lua/lexer'
local Skeleton = require 'lua/skeleton'
local Errors = require 'lua/errors'
local Macros = require 'lua/macros'

local string_reader = Stubs.string_reader
local parse_skeleton = Skeleton.parse_skeleton

while true do
  io.stdout:write('> ')
  local input = io.stdin:read()

  if not input then break end

  local reader = string_reader(input)
  local lexer = Lexer.new(reader)
  local out = {}
  local errors, _ = Errors.error_scope(function()
    out.skel = parse_skeleton(lexer)
    out.expanded = Macros.macro_expand(out.skel)
  end)

  if #errors == 0 then
    print('parsed: ' .. Stubs.inspect_skeletons(out.skel))
    print('expanded: ' .. Stubs.inspect_skeletons(out.expanded))
  else
    for _,e in pairs(errors) do
      print('error: ' .. Stubs.inspect_value(e))
    end
  end
end
